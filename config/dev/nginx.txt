upstream api_server {
  server 127.0.0.1:8080; #default port
  keepalive 128;
}

server {
  listen 80;
  server_name 45.118.133.74;
  return 301 https://45.118.133.74/$request_uri;
}

server {
  listen 443 ssl;
  server_name 45.118.133.74;

  # SSL config goes here (removed for brevity)
  ssl_certificate      /etc/nginx/ssl/nginx.crt;
  ssl_certificate_key  /etc/nginx/ssl/nginx.key;
  ssl_trusted_certificate /etc/nginx/ssl/trusted.crt;
  ssl_dhparam /etc/nginx/ssl/dhparam.pem;
  # support FS, and BEAST protection - https://coderwall.com/p/ebl2qa
  # SSLv3 not supported, due to poodlebleed bug
  server_tokens off;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_session_timeout 5m;
# ssl_ciphers 'AES128+EECDH:AES128+EDH';
  ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA;
  ssl_stapling on;
  ssl_stapling_verify on;
    add_header Strict-Transport-Security max-age=31536000;

    location / {
      proxy_pass http://api_server;
      proxy_redirect off;

      # Security headers removed, but think about X-Frame-Options, Content-Security-Policy, etc

      # Enable HTTP keep-alives
      proxy_http_version 1.1;
      proxy_set_header Connection "";

      # Buffers
      # Buffers should be greater than the mean response size to allow effective caching
      proxy_buffering on;
      proxy_buffers 32 16k;
      proxy_buffer_size 32k;
      proxy_busy_buffers_size 64k;
      proxy_temp_file_write_size 64k;

      # Pass scheme and remote host IP to proxied application
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header Referer $http_referer;
      proxy_set_header Host $http_host;
  }
}
